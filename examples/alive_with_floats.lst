     1                                  section .data
     2 00000000 48656C6C6F2C20576F-         msg1 db "Hello, World!",10,0 ; string with new line
     2 00000009 726C64210A00       
     3                                      msg1Len equ $-msg1-1 ; len(msg1) - 1
     4 0000000F 416C69636520616E64-         msg2 db "Alice and Kicking!", 10, 0; string with new line
     4 00000018 204B69636B696E6721-
     4 00000021 0A00               
     5                                      msg2Len equ $-msg2-1 ; len(msg2) - 1
     6 00000023 6501000000000000            radius dq 357
     7 0000002B 1F85EB51B81E0940            pi dq 3.14
     8                                  
     9 00000033 25730A00                    fmtstr db "%s", 10, 0 ; format specifier for strings
    10 00000037 256C660A00                  fmtflt db "%lf", 10, 0 ; format specifier for float
    11 0000003C 25640A00                    fmtint db "%d", 10, 0; format specifier for integer
    12                                  section .bss
    13                                  section .text
    14                                  extern printf
    15                                      global main
    16                                  main:
    17 00000000 55                          push rbp; save rbp
    18 00000001 4889E5                      mov rbp, rsp ; use rsp as frame pointer
    19 00000004 B800000000                  mov rax, 0
    20 00000009 48BF-                       mov rdi, fmtstr
    20 0000000B [3300000000000000] 
    21 00000013 48BE-                       mov rsi, msg1
    21 00000015 [0000000000000000] 
    22 0000001D E8(00000000)                call printf
    23 00000022 B800000000                  mov rax, 0
    24 00000027 48BF-                       mov rdi, fmtstr
    24 00000029 [3300000000000000] 
    25 00000031 48BE-                       mov rsi, msg2
    25 00000033 [0F00000000000000] 
    26 0000003B E8(00000000)                call printf
    27                                  
    28 00000040 B800000000                  mov rax, 0
    29 00000045 48BF-                       mov rdi, fmtint
    29 00000047 [3C00000000000000] 
    30 0000004F 488B3425[23000000]          mov rsi, [radius]
    31 00000057 E8(00000000)                call printf
    32                                  
    33 0000005C B801000000                  mov rax, 1 ; 1 xmm register is used
    34 00000061 F30F7E0425-                 movq xmm0, [pi]
    34 00000066 [2B000000]         
    35 0000006A 48BF-                       mov rdi, fmtflt
    35 0000006C [3700000000000000] 
    36 00000074 E8(00000000)                call printf
    37 00000079 4889EC                      mov rsp, rbp
    38 0000007C 5D                          pop rbp ; restore frame pointer
    39 0000007D C3                          ret
    40                                  
